version: '3.8'

services:
  test:
    build:
      context: ./backend
      dockerfile: Dockerfile.development
    env_file:
      - ./backend/.env
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgresql://devuser:devpassword@postgres:5432/devdb
      - DIRECT_URL=postgresql://devuser:devpassword@postgres:5432/devdb
      - SYNC_FROM_PRODUCTION=true
    network_mode: host
    command: npm run test
    depends_on:
      postgres:
        condition: service_healthy
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.development
    ports:
      - '3001:3001' # Backend
      - '5555:5555' # Prisma Studio
    env_file:
      # Production URLs are still available from .env for syncing
      - ./backend/.env
    environment:
      # Override for development runtime - use the local dev database
      - NODE_ENV=development
      - DATABASE_URL=postgresql://devuser:devpassword@postgres:5432/devdb
      - DIRECT_URL=postgresql://devuser:devpassword@postgres:5432/devdb

      - SYNC_FROM_PRODUCTION=true
    volumes:
      - ./backend/src:/app/src
      - ./backend/prisma:/app/prisma
      - ./backend/package.json:/app/package.json
      - ./backend/tsconfig.json:/app/tsconfig.json
      - ./backend/nodemon.json:/app/nodemon.json
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dev_network

  postgres:
    image: postgres:15-alpine
    container_name: cinecircle-dev-db
    environment:
      POSTGRES_DB: devdb
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpassword
    ports:
      - '5432:5432'
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - dev_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U devuser -d devdb']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_dev_data:

networks:
  dev_network:
    driver: bridge
