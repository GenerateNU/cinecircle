{
  "name": "cinecircle-monorepo",
  "version": "1.0.0",
  "private": true,
  "description": "Cinecircle - community-oriented movie rating platform",
  "scripts": {
    "install:all": "npm run backend:install && npm run frontend:install",
    "clean:all": "npm run backend:clean && npm run frontend:clean",
    "backend:start": "docker-compose -f docker-compose.dev.yml up --build",
    "backend:stop": "docker-compose -f docker-compose.dev.yml down --volumes",
    "backend:logs": "docker-compose -f docker-compose.dev.yml logs -f",
    "backend:shell": "docker exec -it cinecircle-backend-1 sh",
    "backend:clean": "docker-compose -f docker-compose.dev.yml down --volumes --rmi all",
    "backend:test": "docker exec -it cinecircle-backend-1 npm run test",
    "backend:test:watch": "docker exec -it cinecircle-backend-1 npm run test:watch",
    "backend:test:coverage": "docker exec cinecircle-backend-1 npm run test:coverage",
    "backend:test:unit": "docker exec -it cinecircle-backend-1 npm run test:unit",
    "backend:test:integration": "docker exec -it cinecircle-backend-1 npm run test:integration",
    "backend:lint": "docker exec cinecircle-backend-1 npm run lint",
    "backend:lint:fix": "docker exec cinecircle-backend-1 npm run lint:fix",
    "backend:format": "docker exec cinecircle-backend-1 npm run format",
    "backend:format:check": "docker exec cinecircle-backend-1 npm run format:check",
    "backend:build": "docker exec cinecircle-backend-1 npm run build",
    "backend:docs": "docker exec cinecircle-backend-1 npm run docs",
    "backend:db:studio": "docker exec -it cinecircle-backend-1 npm run db:studio",
    "backend:db:sync": "docker exec -it cinecircle-backend-1 npm run db:sync",
    "backend:install": "cd backend && npm install",
    "frontend:start": "cd frontend && npm start",
    "frontend:android": "cd frontend && npm run android",
    "frontend:ios": "cd frontend && npm run ios",
    "frontend:web": "cd frontend && npm run web",
    "frontend:clean": "cd frontend && npm run clean",
    "frontend:install": "cd frontend && npm install"
  },
  "workspaces": [
    "backend",
    "frontend"
  ]
}
